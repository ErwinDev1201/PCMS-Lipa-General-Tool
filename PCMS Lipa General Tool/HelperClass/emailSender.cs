using PCMS_Lipa_General_Tool.Class;
using PCMS_Lipa_General_Tool.HelperClass;
using System;
using System.Configuration;
using System.Net.Mail;
using System.Threading.Tasks;
using System.Windows.Forms;

namespace YourmeeAppLibrary.Email
{
	public  class emailSender
	{
		private static readonly string EmailHost = ConfigurationManager.AppSettings["smtpserver"];
		private static readonly string PrivTeamEmails = ConfigurationManager.AppSettings["privateTeamEmail"];

		private static readonly string DCErrorWebHook = "https://discord.com/api/webhooks/1069116543734140989/DlyeR6-MZZSMd1q06fV1w3hGFjcYOONCcthuP18bOFqhbMX9d_8C1_S-8N1Pa9UE-jy2";
		private static readonly string DCErrorInvite = "https://discord.gg/4FtdrUhJ";
		private readonly WinDiscordAPI dc = new();


		public void SendEmailToPrivateTeam(string content, string subject)
		{
			SmtpClient SmtpServer = new("smtp." + EmailHost)
			{
				Port = 587,
				Credentials = new System.Net.NetworkCredential("erwin@pcmsbilling.net", "W3yHzy-j-A")
			};
			MailMessage mail = new()
			{
				From = new MailAddress("erwin@pcmsbilling.net", "PCMS Lipa General Tool")
			};
			var addresses = PrivTeamEmails;
			//var addresses = "Lisa@pcmsbilling.net;Gerald@pcmsbilling.net;April@pcmsbilling.net;Klaire@pcmsbilling.net;Cecile@pcmsbilling.net;Kristine@pcmsbilling.net;sarah@pcmsbilling.net;Edimson@pcmsbilling.net;joven@pcmsbilling.net;janice@pcmsbilling.net;amy@pcmsbilling.net;Ranz@pcmsbilling.net;nikki@pcmsbilling.net;Resty@pcmsbilling.net;
			foreach (var address in addresses.Split([";"], StringSplitOptions.RemoveEmptyEntries))
			{
				mail.To.Add(address);
			}
			mail.Bcc.Add("erwin@pcmsbilling.net");
			mail.Subject = subject;
			mail.Body = "<p style=\"font-family:Segoe UI;font-size:14px\">Hi,<br/><br/>" + content + "<br/><br/><b><i>This is an autogenerated email. Please do not reply.</i></b><br/><br/> Thank you!<br/><br/> Regards, <br/> System Administrator</p><p style=\"font-family:Segoe UI;font-size:10px\"><b>CONFIDENTIALITY NOTICE:</b> This email communication and any attachments may contain confidential and privileged information, i.e., protected patient health information, for the use of the designated recipient(s) named above. If you are not the intended recipient, (or authorized to receive for the recipient) you are hereby notified that you have received this communication in error and that any review, disclosure, dissemination, distribution or copying of it or its contents is prohibited. The Health Insurance Portability and Accountability Act of 1996 (HIPAA) protects and secures the privacy of an individual's medical information. Therefore, if you have received this communication in error please destroy all copies of this communication and any attachments and contact the sender by reply email. Thank you for your cooperation.</p>";
			mail.IsBodyHtml = true;
			SmtpServer.EnableSsl = false;
			SmtpServer.Send(mail);
		}

		public void SendEmailAppFailure(string content)
		{
			string smtpHost = "smtp." + EmailHost;
			int smtpPort = 587;
			string senderEmail = "erwin@pcmsbilling.net";
			string senderPassword = "W3yHzy-j-A";
			string recipientEmail = "erwin@pcmsbilling.net";
			int retryCount = 3; // Number of retries
			int retryDelay = 2000; // Delay in milliseconds between retries

			for (int attempt = 1; attempt <= retryCount; attempt++)
			{
				try
				{
					using SmtpClient SmtpServer = new(smtpHost);
					SmtpServer.Port = smtpPort;
					SmtpServer.Credentials = new System.Net.NetworkCredential(senderEmail, senderPassword);
					SmtpServer.EnableSsl = true;

					using MailMessage mail = new();
					mail.From = new MailAddress(senderEmail, "PCMS Lipa General Tool");
					mail.To.Add(recipientEmail);
					mail.Subject = "PCMS Lipa General Tool Status";
					mail.Body = "Hi, \n\n" + content + "\n\nRegards, \nSystem Administrator";

					SmtpServer.Send(mail);
					return; // Exit the loop on success
				}
				catch (Exception ex)
				{
					if (attempt == retryCount)
					{
						var ErrorMessage = $"Failed to send email after {retryCount} attempts.\nModule: Email Sender\nDetailed Error:\n{ex}";
						dc.PublishtoDiscord("Email Sender", "", ErrorMessage, null, DCErrorWebHook, DCErrorInvite);
						return;
					}

					// Delay before retrying
					Task.Delay(retryDelay).Wait();
				}
			}
		}



		//public void SendEmailAppFailure(string content)
		//{
		//	try
		//	{
		//
		//	}
		//	catch (Exception)
		//	{
		//
		//		throw;
		//	}
		//	SmtpClient SmtpServer = new SmtpClient("smtp." + EmailHost)
		//	{
		//		Port = 587,
		//		Credentials = new System.Net.NetworkCredential("erwin@pcmsbilling.net", "W3yHzy-j-A")
		//	};
		//	MailMessage mail = new MailMessage
		//	{
		//		From = new MailAddress("erwin@pcmsbilling.net", "PCMS Lipa General Tool")
		//	};
		//	mail.To.Add("erwin@pcmsbilling.net");
		//	mail.Subject = "PCMS Lipa General Tool Status";
		//	mail.Body = "Hi, \n\n " + content + "\n\n Regards, \n System Administrator";
		//	SmtpServer.EnableSsl = false;
		//	SmtpServer.Send(mail);
		//}
		//
		public static void SendPasswordEmail(string content, string email, string subject)
		{
			SmtpClient SmtpServer = new("smtp." + EmailHost)
			{
				Port = 587,
				Credentials = new System.Net.NetworkCredential("erwin@pcmsbilling.net", "W3yHzy-j-A")
			};
			MailMessage mail = new()
			{
				From = new MailAddress("erwin@pcmsbilling.net", "PCMS Lipa General Tool")
			};			
			mail.To.Add(email);
			mail.Bcc.Add("erwin@pcmsbilling.net");
			mail.Subject = subject;
			mail.Body = "<p style=\"font-family:Segoe UI;font-size:14px\">Hi,<br/><br/>" + content + "<br/><br/><b><i>This is an autogenerated email. Please do not reply.</i></b><br/><br/> Thank you!<br/><br/> Regards, <br/> System Administrator</p><p style=\"font-family:Segoe UI;font-size:10px\"><b>CONFIDENTIALITY NOTICE:</b> This email communication and any attachments may contain confidential and privileged information, i.e., protected patient health information, for the use of the designated recipient(s) named above. If you are not the intended recipient, (or authorized to receive for the recipient) you are hereby notified that you have received this communication in error and that any review, disclosure, dissemination, distribution or copying of it or its contents is prohibited. The Health Insurance Portability and Accountability Act of 1996 (HIPAA) protects and secures the privacy of an individual's medical information. Therefore, if you have received this communication in error please destroy all copies of this communication and any attachments and contact the sender by reply email. Thank you for your cooperation.</p>";
			mail.IsBodyHtml = true;
			SmtpServer.EnableSsl = false;
			SmtpServer.Send(mail);
		}

	

		public void SendEmail(string attachmentoption, string content, string filename, string subject, string email, string SenderName, string ccEmail1, string ccEmail2)
		{
			if (attachmentoption == "yesAttach")
			{
				SmtpClient SmtpServer = new("smtp." + EmailHost)
				{
					Port = 587,
					Credentials = new System.Net.NetworkCredential("erwin@pcmsbilling.net", "W3yHzy-j-A")
				};
				MailMessage mail = new()
				{
					From = new MailAddress("erwin@pcmsbilling.net", SenderName)
				};
				//mail.To.Add("Edimson@pcmsbilling.net");
				mail.To.Add(email);
				//mail.To.Add("erwin@pcmsbilling.net");
				mail.Bcc.Add("mr.erwinalcantara@gmail.com");
				mail.Subject = subject;
				mail.Attachments.Add(new Attachment(filename));
				//mail.Body = "Hi, \n\n" + content;
				mail.IsBodyHtml = true;
				SmtpServer.EnableSsl = false;
				SmtpServer.Send(mail);
			}
			else
			{
				SmtpClient SmtpServer = new("smtp." + EmailHost)
				{
					Port = 587,
					Credentials = new System.Net.NetworkCredential("erwin@pcmsbilling.net", "W3yHzy-j-A")
				};
				MailMessage mail = new()
				{
					From = new MailAddress("erwin@pcmsbilling.net", SenderName)
				};
				//mail.To.Add("Edimson@pcmsbilling.net");
				mail.To.Add(email);
				//mail.To.Add("erwin@pcmsbilling.net");
				if (email == "erwin@pcmsbilling.net")
				{
					mail.Bcc.Add("erwin@pcmsbilling.net");
				}
				if (ccEmail1 != null)
				{
					mail.CC.Add(ccEmail1);
				}
				if (ccEmail2 != null)
				{
					mail.CC.Add(ccEmail2);
				}

				//if (ccEmail != null)
				//{
				//	if (ccEmail.Contains("Angeline") || ccEmail.Contains("Shalah"))
				//	{
				//		mail.CC.Add(ccEmail);
				//	}
				//}
				mail.Subject = subject;
				mail.Body = "<p style=\"font-family:Segoe UI;font-size:14px\">" + content + "<br/><br/><b><i>This is an autogenerated email. Please do not reply.</i></b><br/><br/><p style=\"font-family:Segoe UI;font-size:10px\"><b>CONFIDENTIALITY NOTICE:</b> This email communication and any attachments may contain confidential and privileged information, i.e., protected patient health information, for the use of the designated recipient(s) named above. If you are not the intended recipient, (or authorized to receive for the recipient) you are hereby notified that you have received this communication in error and that any review, disclosure, dissemination, distribution or copying of it or its contents is prohibited. The Health Insurance Portability and Accountability Act of 1996 (HIPAA) protects and secures the privacy of an individual's medical information. Therefore, if you have received this communication in error please destroy all copies of this communication and any attachments and contact the sender by reply email. Thank you for your cooperation.</p>";
				mail.IsBodyHtml = true;
				//mail.Body = "<p style=\"font-family:Segoe UI;font-size:14px\">" + content;
				SmtpServer.EnableSsl = false;
				SmtpServer.Send(mail);
			}
			
		}
	}
}
